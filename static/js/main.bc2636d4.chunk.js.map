{"version":3,"sources":["LinksExamples.js","Example.js","useToggle/ExampleUseToggle.js","useToggle/useToggle.js","useTimeout/useTimeout.js","useTimeout/ExampleUseTimeout.js","useScrollDirection/ExampleUseScrollDirection.js","useScrollDirection/useScrollDirection.js","useLocalStorage/ExampleUseLocalStorage.js","useLocalStorage/useLocalStorage.js","useAsync/useAsync.js","useSafeDispatch/useSafeDispatch.js","utlis.js","useAsync/ExampleUseAsync.js","useDebounce/ExampleUseDebounce.js","useDebounce/useDebounce.js","useArray/ExampleUseArray.js","useArray/useArray.js","useOutsideClick/ExampleUseOutsideClick.js","useOutsideClick/useOutsideClick.js","useStateWithHistory/ExampleUseStateWithHistory.js","useStateWithHistory/useStateWithHistory.js","useEventListener/ExampleUseEventListener.js","useEventListener/useEventListener.js","useOnScreen/ExampleUseOnScreen.js","useOnScreen/useOnScreen.js","useHover/ExampleUseHover.js","useHover/useHover.js","App.js","index.js"],"names":["LinksExamples","className","href","Example","children","title","id","split","map","word","toLowerCase","join","console","log","ExampleUseToggle","initialState","useState","state","setState","toggle","useCallback","s","useToggle","isToggled","type","onClick","useTimeout","callback","delay","callbackRef","useRef","timeoutRef","useEffect","current","set","setTimeout","clear","clearTimeout","reset","ExampleUseTimeout","number","setNumber","prev","ExampleUseScrollDirection","direction","lastScrollTop","scrollDirection","setScrollDirection","handleScroll","scrollTop","window","pageYOffset","document","documentElement","addEventListener","removeEventListener","useScrollDirection","ExampleUseLocalStorage","key","defaultValue","serialize","JSON","stringify","deserialize","parse","valueInLocalStorage","localStorage","getItem","prevKeyRef","prevKey","removeItem","setItem","useLocalStorage","textInput","setTextInput","value","onChange","e","target","asyncReducer","action","status","data","error","Error","useAsync","useReducer","dispatch","mounted","useLayoutEffect","useSafeDispatch","run","promise","then","receivedData","setData","setError","fakeRequest","Promise","resolve","reject","body","ExampleUseAsync","myData","ExampleUseDebounce","dependencies","useDebounce","res","ExampleUseArray","initialArray","array","setArray","push","element","a","filter","update","index","newElement","slice","length","remove","useArray","n","ExampleUseOutsideClick","isClickOutside","setIsClickOutside","ref","handleClickOutside","contains","useOutsideClick","refContainer","stylesBox","width","height","backgroundColor","style","ExampleUseStateWithHistory","capacity","setValue","historyRef","currentRef","v","resolvedValue","splice","shift","back","forward","jumpTo","idx","history","useStateWithHistory","toString","ExampleUseEventListener","x","y","coords","setCoords","eventName","handler","savedHandler","eventListener","event","useEventListener","clientX","clientY","ExampleUseOnScreen","elementRef","onScreen","rootMargin","isIntersecting","setIsIntersecting","observer","IntersectionObserver","entry","observe","unobserve","useOnScreen","ExampleUseHover","isHovered","setIsHovered","handleMouseEnter","handleMouseLeave","node","useHover","hoverRef","background","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bc2636d4.chunk.js","sourcesContent":["const LinksExamples = () => (\r\n  <ol className=\"list-custom-hooks\">\r\n    <li>\r\n      <a href=\"#use-toggle\">useToggle</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#use-timeout\">usetimeout</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#use-scroll-direction\">useScrollDirection</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#use-local-storage\">uselocalStorage</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#use-async\">useAsync</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#use-debounce\">useDebounce</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#use-array\">useArray</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#use-outside-click\">useOutsideClick</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#use-state-with-history\">useStateWithHistory</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#use-event-listener\">useEventListener</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#use-on-screen\">useOnScreen</a>\r\n    </li>\r\n    <li>\r\n      <a href=\"#use-hover\">useHover</a>\r\n    </li>\r\n  </ol>\r\n);\r\n\r\nexport default LinksExamples;\r\n","/* eslint-disable react/prop-types */\r\nconst Example = ({ children, title }) => {\r\n  const id = title\r\n    .split(/(?=[A-Z])/)\r\n    .map((word) => word.toLowerCase())\r\n    .join('-');\r\n\r\n  console.log(`render: ${id}`);\r\n\r\n  return (\r\n    <article id={id}>\r\n      <hr />\r\n      <h2>\r\n        <a href=\"#main-title\">⬆️</a>\r\n        {title}\r\n      </h2>\r\n      {children}\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Example;\r\n","import { useToggle } from './useToggle';\r\nimport Example from '../Example';\r\n\r\nconst ExampleUseToggle = () => {\r\n  const [isToggled, toggle] = useToggle(false);\r\n\r\n  return (\r\n    <Example title=\"useToggle\">\r\n      <button type=\"button\" onClick={toggle}>\r\n        {isToggled && 'toggled'}\r\n        {!isToggled && 'not toggled'}\r\n      </button>\r\n    </Example>\r\n  );\r\n};\r\n\r\nexport default ExampleUseToggle;\r\n","import { useCallback, useState } from 'react';\r\n\r\n/**\r\n * Creates a state which can be toggled.\r\n *\r\n * @param {boolean} initialState - initial toggle state.\r\n *\r\n * @returns {array} - toggle state and toggle function.\r\n */\r\n\r\nconst useToggle = (initialState = false) => {\r\n  const [state, setState] = useState(initialState);\r\n  const toggle = useCallback(() => setState((s) => !s), []);\r\n\r\n  return [state, toggle];\r\n};\r\n\r\nexport { useToggle };\r\n","import { useCallback, useEffect, useRef } from 'react';\r\n\r\n/**\r\n * Runs a function inside a timeout and allows to control it by reseting\r\n * or by clearing it. Usefull for use with other custom hooks like useDebounce.\r\n *\r\n * @param {function} callback - the function to run after the delay.\r\n * @param {number} delay delay in ms.\r\n *\r\n * @returns {object} - { reset, clear }\r\n */\r\nconst useTimeout = (callback, delay) => {\r\n  const callbackRef = useRef(callback);\r\n  const timeoutRef = useRef();\r\n\r\n  useEffect(() => {\r\n    callbackRef.current = callback;\r\n  }, [callback]);\r\n\r\n  const set = useCallback(() => {\r\n    timeoutRef.current = setTimeout(() => callbackRef.current(), delay);\r\n  }, [delay]);\r\n\r\n  const clear = useCallback(() => {\r\n    if (timeoutRef.current) clearTimeout(timeoutRef.current);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    set();\r\n    return clear;\r\n  }, [delay, set, clear]);\r\n\r\n  const reset = useCallback(() => {\r\n    clear();\r\n    set();\r\n  }, [clear, set]);\r\n\r\n  return { reset, clear };\r\n};\r\n\r\nexport { useTimeout };\r\n","import { useState } from 'react';\r\nimport { useTimeout } from './useTimeout';\r\n\r\n// utils\r\nimport Example from '../Example';\r\n\r\nconst ExampleUseTimeout = () => {\r\n  const [number, setNumber] = useState(0);\r\n\r\n  const increment = () => setNumber((prev) => prev + 1);\r\n\r\n  // will run once on mount\r\n  // can't negate with one post clear()\r\n  // clear will clear the timeout\r\n  // reset can be used to trigger it again\r\n  const { clear, reset } = useTimeout(increment, 1000);\r\n\r\n  return (\r\n    <Example title=\"useTimeout\">\r\n      <p>{number}</p>\r\n      <button type=\"button\" onClick={clear}>\r\n        Clear\r\n      </button>\r\n      <button type=\"button\" onClick={reset}>\r\n        Reset\r\n      </button>\r\n    </Example>\r\n  );\r\n};\r\n\r\nexport default ExampleUseTimeout;\r\n","import { useScrollDirection } from './useScrollDirection';\r\n\r\n// utils\r\nimport Example from '../Example';\r\n\r\nconst ExampleUseScrollDirection = () => {\r\n  const direction = useScrollDirection('down');\r\n\r\n  return (\r\n    <Example title=\"useScrollDirection\">\r\n      <p>{direction}</p>\r\n    </Example>\r\n  );\r\n};\r\n\r\nexport default ExampleUseScrollDirection;\r\n","import { useRef, useState, useEffect } from 'react';\r\n\r\n/**\r\n * Returns last vertical scroll direction.\r\n *\r\n * @param {string} initialState 'up' or 'down'.\r\n *\r\n * @return {string} - 'up' or 'down'.\r\n */\r\n\r\nconst useScrollDirection = (initialState) => {\r\n  const lastScrollTop = useRef(0);\r\n  const [scrollDirection, setScrollDirection] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const scrollTop =\r\n        window.pageYOffset || document.documentElement.scrollTop;\r\n\r\n      if (scrollTop > lastScrollTop.current) {\r\n        lastScrollTop.current = scrollTop <= 0 ? 0 : scrollTop;\r\n        setScrollDirection('down');\r\n      } else {\r\n        lastScrollTop.current = scrollTop <= 0 ? 0 : scrollTop;\r\n        setScrollDirection('up');\r\n      }\r\n    };\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return scrollDirection;\r\n};\r\n\r\nexport { useScrollDirection };\r\n","import { useLocalStorage } from './useLocalStorage';\r\n\r\n// utils\r\nimport Example from '../Example';\r\n\r\nconst ExampleUseLocalStorage = () => {\r\n  // textInput is saved in local storage on every change\r\n  const [textInput, setTextInput] = useLocalStorage('text');\r\n\r\n  const handleChange = (e) => {\r\n    setTextInput(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Example title=\"useLocalStorage\">\r\n      <p>\r\n        The text written in the input is saved in local storage in real time\r\n      </p>\r\n      <input type=\"text\" value={textInput} onChange={handleChange} />\r\n    </Example>\r\n  );\r\n};\r\n\r\nexport default ExampleUseLocalStorage;\r\n","import { useState, useRef, useEffect } from 'react';\r\n\r\n/**\r\n * Creates a state synced with the local storage.\r\n *\r\n * @param {String} key local storage key name.\r\n * @param {Object} defaultValue the value to use if it is not already in localStorage.\r\n * @param {{serialize: Function, deserialize: Function}} options the serialize and deserialize functions to use (defaults to JSON.stringify and JSON.parse).\r\n *\r\n * @returns {array} - [state, setState].\r\n */\r\nfunction useLocalStorage(\r\n  key,\r\n  defaultValue = '',\r\n  { serialize = JSON.stringify, deserialize = JSON.parse } = {}\r\n) {\r\n  const [state, setState] = useState(() => {\r\n    const valueInLocalStorage = window.localStorage.getItem(key);\r\n    if (valueInLocalStorage) {\r\n      return deserialize(valueInLocalStorage);\r\n    }\r\n    return typeof defaultValue === 'function' ? defaultValue() : defaultValue;\r\n  });\r\n\r\n  const prevKeyRef = useRef(key);\r\n\r\n  useEffect(() => {\r\n    const prevKey = prevKeyRef.current;\r\n    if (prevKey !== key) {\r\n      window.localStorage.removeItem(prevKey);\r\n    }\r\n    prevKeyRef.current = key;\r\n    window.localStorage.setItem(key, serialize(state));\r\n  }, [key, state, serialize]);\r\n\r\n  return [state, setState];\r\n}\r\n\r\nexport { useLocalStorage };\r\n","/* eslint-disable no-shadow */\r\nimport { useCallback, useReducer } from 'react';\r\nimport { useSafeDispatch } from '../useSafeDispatch/useSafeDispatch';\r\n\r\nconst asyncReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'pending': {\r\n      return { status: 'pending', data: null, error: null };\r\n    }\r\n    case 'resolved': {\r\n      return { status: 'resolved', data: action.data, error: null };\r\n    }\r\n    case 'rejected': {\r\n      return { status: 'rejected', data: null, error: action.error };\r\n    }\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Monitors an async promise. Pass your promise to the 'run'\r\n * returned function.\r\n *\r\n * @param {{status, data}} initialState object with initial status and data.\r\n *\r\n * @returns {object} {setData, setError, error, status, data, run}.\r\n * @returns status can be 'idle', 'pending', 'resolved', 'rejected'.\r\n */\r\nconst useAsync = (initialState) => {\r\n  const [state, unsafeDispatch] = useReducer(asyncReducer, {\r\n    status: 'idle',\r\n    data: null,\r\n    error: null,\r\n    ...initialState,\r\n  });\r\n\r\n  const dispatch = useSafeDispatch(unsafeDispatch);\r\n\r\n  const { data, error, status } = state;\r\n\r\n  const run = useCallback(\r\n    (promise) => {\r\n      dispatch({ type: 'pending' });\r\n      promise.then(\r\n        (receivedData) => {\r\n          dispatch({ type: 'resolved', data: receivedData });\r\n        },\r\n        (error) => {\r\n          dispatch({ type: 'rejected', error });\r\n        }\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const setData = useCallback(\r\n    (data) => dispatch({ type: 'resolved', data }),\r\n    [dispatch]\r\n  );\r\n  const setError = useCallback(\r\n    (error) => dispatch({ type: 'rejected', error }),\r\n    [dispatch]\r\n  );\r\n\r\n  return {\r\n    setData,\r\n    setError,\r\n    error,\r\n    status,\r\n    data,\r\n    run,\r\n  };\r\n};\r\n\r\nexport { useAsync };\r\n","/* eslint-disable no-void */\r\nimport { useRef, useLayoutEffect, useCallback } from 'react';\r\n\r\n/**\r\n * Returns the passed function as a safe variant which doesn't run\r\n * if the component is unmounted.\r\n *\r\n * @param {function} dispatch the function to make safe.\r\n *\r\n * @returns {function} - the safe variant of the passed function.\r\n */\r\nconst useSafeDispatch = (dispatch) => {\r\n  const mounted = useRef(false);\r\n\r\n  useLayoutEffect(() => {\r\n    mounted.current = true;\r\n    return () => {\r\n      mounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  return useCallback(\r\n    (...args) => (mounted.current ? dispatch(...args) : void 0),\r\n    [dispatch]\r\n  );\r\n};\r\n\r\nexport { useSafeDispatch };\r\n","function fakeRequest(delay = 100) {\r\n  const promise = new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve(JSON.stringify({ body: 'something from server' }));\r\n\r\n      // error version\r\n      // reject(JSON.stringify({ body: 'something from server' }));\r\n    }, delay);\r\n  });\r\n\r\n  return promise;\r\n}\r\n\r\nexport { fakeRequest };\r\n","/* eslint-disable no-use-before-define */\r\nimport { useAsync } from './useAsync';\r\n\r\n// utils\r\nimport Example from '../Example';\r\nimport { fakeRequest } from '../utlis';\r\n\r\nconst ExampleUseAsync = () => {\r\n  // the hook provides with all the async operation details\r\n  const {\r\n    data: myData,\r\n    setData,\r\n    setError,\r\n    error,\r\n    status,\r\n    run,\r\n  } = useAsync({ status: 'idle' });\r\n\r\n  const makeRequest = () => {\r\n    // you just pass your async promise-based func to the run function\r\n    // all the data after this async operation is available from the hook\r\n    run(fakeRequest(1000));\r\n  };\r\n\r\n  // use the details from the hook to conditionally render components\r\n  // which depend on the status or the error\r\n  return (\r\n    <Example title=\"useAsync\">\r\n      <button onClick={makeRequest} type=\"button\">\r\n        Make request\r\n      </button>\r\n      <div>Request status: {status}</div>\r\n      {myData && <p>{myData}</p>}\r\n      {error && <p>An error occurred</p>}\r\n    </Example>\r\n  );\r\n};\r\n\r\nexport default ExampleUseAsync;\r\n","/* eslint-disable no-use-before-define */\r\nimport { useState } from 'react';\r\nimport { useDebounce } from './useDebounce';\r\n\r\n// utils\r\nimport Example from '../Example';\r\nimport { fakeRequest } from '../utlis';\r\n\r\nconst ExampleUseDebounce = () => {\r\n  const [textInput, setTextInput] = useState('');\r\n  const [data, setData] = useState('');\r\n\r\n  const makeRequest = () => {\r\n    fakeRequest(0).then((res) => setData(res));\r\n  };\r\n\r\n  // you pass the async function, the delay and the state to dictate timer start\r\n  useDebounce(makeRequest, 1000, [textInput]);\r\n\r\n  const handleChange = (e) => {\r\n    setTextInput(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Example title=\"useDebounce\">\r\n      <p>The request will be made only after user stopped typing for 1s</p>\r\n      <input type=\"text\" value={textInput} onChange={handleChange} />\r\n      <p>Received: {data}</p>\r\n    </Example>\r\n  );\r\n};\r\n\r\nexport default ExampleUseDebounce;\r\n","import { useEffect } from 'react';\r\nimport { useTimeout } from '../useTimeout/useTimeout';\r\n\r\n/**\r\n * Runs a timeout only after a state has stopped changing for an amount of ms.\r\n * It \"debounces\" the previous timeout if a state in the dep array has changed.\r\n * @param {function} callback The function to run.\r\n * @param {number} delay delay in ms.\r\n * @param {array} dependencies array of dependencies.\r\n */\r\nconst useDebounce = (callback, delay, dependencies) => {\r\n  const { reset, clear } = useTimeout(callback, delay);\r\n\r\n  // if dep changed reset the timer\r\n  useEffect(reset, [...dependencies, reset]);\r\n\r\n  // denies the very first run\r\n  useEffect(clear, [clear]);\r\n};\r\n\r\nexport { useDebounce };\r\n","import { useArray } from './useArray';\r\n\r\n// utils\r\nimport Example from '../Example';\r\n\r\nconst ExampleUseArray = () => {\r\n  const initialArray = [1, 2, 3, 4, 5];\r\n  const { array, set, push, filter, update, remove, clear } =\r\n    useArray(initialArray);\r\n\r\n  return (\r\n    <Example title=\"useArray\">\r\n      <p>{JSON.stringify(array)}</p>\r\n      <div>\r\n        <button onClick={() => set([1, 2, 3, 4, 5, 6])} type=\"button\">\r\n          set([1, 2, 3, 4, 5, 6])\r\n        </button>\r\n        <button onClick={() => push(0)} type=\"button\">\r\n          push(0)\r\n        </button>\r\n        <button onClick={() => filter((n) => n % 2 !== 0)} type=\"button\">\r\n          filter odd\r\n        </button>\r\n        <button onClick={() => update(1, 0)} type=\"button\">\r\n          update(1, 0)\r\n        </button>\r\n        <button onClick={() => remove(0)} type=\"button\">\r\n          remove(0)\r\n        </button>\r\n        <button onClick={() => clear()} type=\"button\">\r\n          clear()\r\n        </button>\r\n      </div>\r\n    </Example>\r\n  );\r\n};\r\n\r\nexport default ExampleUseArray;\r\n","import { useState } from 'react';\r\n\r\nconst useArray = (initialArray) => {\r\n  const [array, setArray] = useState(initialArray);\r\n\r\n  // push an element to the end\r\n  const push = (element) => {\r\n    setArray((a) => [...a, element]);\r\n  };\r\n\r\n  // filter with a callback\r\n  const filter = (callback) => {\r\n    setArray((a) => a.filter(callback));\r\n  };\r\n\r\n  // update an element at index position with a new element\r\n  const update = (index, newElement) => {\r\n    setArray((a) => [\r\n      ...a.slice(0, index),\r\n      newElement,\r\n      ...a.slice(index + 1, a.length),\r\n    ]);\r\n  };\r\n\r\n  // remove an element at index position\r\n  const remove = (index) => {\r\n    setArray((a) => [...a.slice(0, index), ...a.slice(index + 1, a.length)]);\r\n  };\r\n\r\n  // clear whole array\r\n  const clear = () => {\r\n    setArray([]);\r\n  };\r\n\r\n  // instead of setArray return \"set\"\r\n  return { array, set: setArray, push, filter, update, remove, clear };\r\n};\r\n\r\nexport { useArray };\r\n","import Example from '../Example';\r\nimport { useOutsideClick } from './useOutsideClick';\r\n\r\nconst ExampleUseOutsideClick = () => {\r\n  // returns a ref to be put on the component\r\n  const [refContainer, isClickOutside] = useOutsideClick();\r\n\r\n  const stylesBox = {\r\n    width: '100px',\r\n    height: '100px',\r\n    backgroundColor: isClickOutside ? 'blue' : 'red',\r\n  };\r\n\r\n  return (\r\n    <Example title=\"useOutsideClick\">\r\n      <p>The text below tells where you clicked relative to the black box</p>\r\n      <p>clicked {isClickOutside ? 'outside' : 'inside'}</p>\r\n      <div ref={refContainer} style={stylesBox} />\r\n    </Example>\r\n  );\r\n};\r\n\r\nexport default ExampleUseOutsideClick;\r\n","import { useState, useRef, useEffect } from 'react';\r\n\r\n/**\r\n * Tracks if a click is outside an element.\r\n *\r\n * @returns {array} [ref, isClickOuside], ref should be put on the component.\r\n */\r\nconst useOutsideClick = () => {\r\n  const [isClickOutside, setIsClickOutside] = useState(false);\r\n\r\n  const ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const node = ref.current;\r\n    if (node) {\r\n      const handleClickOutside = (e) => {\r\n        if (ref.current && !ref.current.contains(e.target)) {\r\n          setIsClickOutside(true);\r\n        } else {\r\n          setIsClickOutside(false);\r\n        }\r\n      };\r\n\r\n      document.addEventListener('pointerdown', handleClickOutside);\r\n      return () => {\r\n        document.removeEventListener('pointerdown', handleClickOutside);\r\n      };\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [ref.current]);\r\n\r\n  return [ref, isClickOutside];\r\n};\r\n\r\nexport { useOutsideClick };\r\n","import Example from '../Example';\r\nimport { useStateWithHistory } from './useStateWithHistory';\r\n\r\nconst ExampleUseStateWithHistory = () => {\r\n  const [value, setValue, { history, current, back, forward, jumpTo }] =\r\n    useStateWithHistory(0);\r\n\r\n  return (\r\n    <Example title=\"useStateWithHistory\">\r\n      <p>Current value: {value}</p>\r\n      <p>History: {history.toString()}</p>\r\n      <p>History current: {current}</p>\r\n      <button type=\"button\" onClick={() => setValue((prev) => prev + 1)}>\r\n        Increment\r\n      </button>\r\n      <button type=\"button\" onClick={back}>\r\n        Back\r\n      </button>\r\n      <button type=\"button\" onClick={forward}>\r\n        Forward\r\n      </button>\r\n      <button type=\"button\" onClick={() => jumpTo(1)}>\r\n        Go to 1\r\n      </button>\r\n    </Example>\r\n  );\r\n};\r\n\r\nexport default ExampleUseStateWithHistory;\r\n","import { useState, useRef, useCallback } from 'react';\r\n\r\n/**\r\n * Creates a state that remembers \"capacity\" amount of values it has been in the past.\r\n *\r\n * @param {node} ref a ref to the element.\r\n * @param {object} object a configuration object with capacity prop\r\n *\r\n * @returns {array} [value, set {back, forward, jumpTo}].\r\n */\r\nconst useStateWithHistory = (defaultValue, { capacity = 10 } = {}) => {\r\n  const [value, setValue] = useState(defaultValue);\r\n  const historyRef = useRef([value]);\r\n  const currentRef = useRef(0);\r\n\r\n  const set = useCallback(\r\n    (v) => {\r\n      const resolvedValue = typeof v === 'function' ? v(value) : v;\r\n      if (historyRef.current[currentRef.current] !== resolvedValue) {\r\n        if (currentRef.current < historyRef.current.length - 1) {\r\n          historyRef.current.splice(currentRef.current + 1);\r\n        }\r\n        historyRef.current.push(resolvedValue);\r\n\r\n        while (historyRef.current.length > capacity) {\r\n          historyRef.current.shift();\r\n        }\r\n        currentRef.current = historyRef.current.length - 1;\r\n      }\r\n      setValue(resolvedValue);\r\n    },\r\n    [capacity, value]\r\n  );\r\n\r\n  const back = useCallback(() => {\r\n    if (currentRef.current <= 0) return;\r\n    currentRef.current -= 1;\r\n    setValue(historyRef.current[currentRef.current]);\r\n  }, []);\r\n\r\n  const forward = useCallback(() => {\r\n    if (currentRef.current >= historyRef.current.length - 1) return;\r\n    currentRef.current += 1;\r\n    setValue(historyRef.current[currentRef.current]);\r\n  }, []);\r\n\r\n  const jumpTo = useCallback((idx) => {\r\n    if (idx < 0 || idx > historyRef.current.length - 1) return;\r\n    currentRef.current = idx;\r\n    setValue(historyRef.current[currentRef.current]);\r\n  }, []);\r\n\r\n  return [\r\n    value,\r\n    set,\r\n    {\r\n      history: historyRef.current,\r\n      current: currentRef.current,\r\n      back,\r\n      forward,\r\n      jumpTo,\r\n    },\r\n  ];\r\n};\r\n\r\nexport { useStateWithHistory };\r\n","import { useState, useCallback } from 'react';\r\nimport { useEventListener } from './useEventListener';\r\n\r\n// utils\r\nimport Example from '../Example';\r\n\r\nconst ExampleUseEventListener = () => {\r\n  const [coords, setCoords] = useState({ x: 0, y: 0 });\r\n\r\n  // Event handler utilizing useCallback\r\n  // so that reference never changes.\r\n  const handler = useCallback(\r\n    ({ clientX, clientY }) => {\r\n      setCoords({ x: clientX, y: clientY });\r\n    },\r\n    [setCoords]\r\n  );\r\n\r\n  // hook use\r\n  useEventListener('mousemove', handler);\r\n\r\n  return (\r\n    <Example title=\"useEventListener\">\r\n      <p>Mouse coords by 'mousmemove'</p>\r\n      <p>\r\n        x: {coords.x}, y: {coords.y}\r\n      </p>\r\n    </Example>\r\n  );\r\n};\r\n\r\nexport default ExampleUseEventListener;\r\n","import { useRef, useEffect } from 'react';\r\n\r\n/**\r\n * Tracks if a click is outside an element.\r\n * @param {string} eventName event name.\r\n * @param {function} handler event handler function.\r\n * @param {Object} [element=window] default = window, optional object to put the eventListener on.\r\n *\r\n */\r\nconst useEventListener = (eventName, handler, element = window) => {\r\n  // stores the handler\r\n  const savedHandler = useRef();\r\n\r\n  // Update ref.current value if handler changes.\r\n  // This allows our effect below to always get latest handler\r\n  // without us needing to pass it in effect deps array\r\n  // and potentially cause effect to re-run every render.\r\n  useEffect(() => {\r\n    savedHandler.current = handler;\r\n  }, [handler]);\r\n\r\n  useEffect(() => {\r\n    const isSuported = element && element.addEventListener;\r\n    if (!isSuported) {\r\n      console.log(`Element doesn't support addEventListener`);\r\n      return;\r\n    }\r\n\r\n    // Create event listener that calls handler function stored in ref\r\n    // don't know why exactly it is needed ...\r\n    // probably to not refference the same function but to call it\r\n    const eventListener = (event) => savedHandler.current(event);\r\n\r\n    element.addEventListener(eventName, eventListener);\r\n\r\n    return () => {\r\n      element.removeEventListener(eventName, eventListener);\r\n    };\r\n  }, [eventName, element]);\r\n};\r\n\r\nexport { useEventListener };\r\n","import { useRef } from 'react';\r\nimport { useOnScreen } from './useOnScreen';\r\n\r\n// utils\r\nimport Example from '../Example';\r\n\r\nconst ExampleUseOnScreen = () => {\r\n  const elementRef = useRef();\r\n  const onScreen = useOnScreen(elementRef, '-100px');\r\n\r\n  return (\r\n    <Example title=\"useOnScreen\">\r\n      <div\r\n        ref={elementRef}\r\n        style={{\r\n          width: '100px',\r\n          height: '300px',\r\n          backgroundColor: onScreen ? 'blue' : 'red',\r\n        }}\r\n      />\r\n      <p>\r\n        The box is considered on screen when more than 100px of it's height is\r\n        visible\r\n      </p>\r\n      <p>onScreen: {onScreen.toString()}</p>\r\n    </Example>\r\n  );\r\n};\r\n\r\nexport default ExampleUseOnScreen;\r\n","import { useState, useEffect } from 'react';\r\n\r\n/**\r\n * Determines if element is visible on screen.\r\n * Or if element is x px away from being on the screen.\r\n *\r\n * @param {Object} ref element ref.\r\n * @param {string} [rootMargin=\"0px\"] default=\"0px\", offsreen trigger corrds.\r\n *\r\n * @returns {boolean} if the element is visible.\r\n */\r\nfunction useOnScreen(ref, rootMargin = '0px') {\r\n  const [isIntersecting, setIsIntersecting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        setIsIntersecting(entry.isIntersecting);\r\n      },\r\n      { rootMargin }\r\n    );\r\n\r\n    if (ref.current) {\r\n      observer.observe(ref.current);\r\n    }\r\n\r\n    return () => {\r\n      observer.unobserve(ref.current);\r\n    };\r\n  }, []);\r\n\r\n  return isIntersecting;\r\n}\r\n\r\nexport { useOnScreen };\r\n","import { useHover } from './useHover';\r\n\r\n// utils\r\nimport Example from '../Example';\r\n\r\nconst ExampleUseHover = () => {\r\n  const [hoverRef, isHovered] = useHover();\r\n\r\n  const stylesBox = {\r\n    width: '100px',\r\n    height: '100px',\r\n    background: isHovered ? 'red' : 'blue',\r\n  };\r\n\r\n  return (\r\n    <Example title=\"useHover\">\r\n      <p>Hover over the square</p>\r\n      <div ref={hoverRef} style={stylesBox} />\r\n    </Example>\r\n  );\r\n};\r\n\r\nexport default ExampleUseHover;\r\n","import { useState, useRef, useEffect } from 'react';\r\n\r\n/**\r\n * Detects if a component is hovered.\r\n *\r\n * @returns {array} [ref, isHovered] ref is put on the component.\r\n */\r\nfunction useHover() {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n\r\n  const ref = useRef(null);\r\n\r\n  const handleMouseEnter = () => setIsHovered(true);\r\n  const handleMouseLeave = () => setIsHovered(false);\r\n\r\n  useEffect(() => {\r\n    const node = ref.current;\r\n    if (node) {\r\n      node.addEventListener('mouseenter', handleMouseEnter);\r\n      node.addEventListener('mouseleave', handleMouseLeave);\r\n\r\n      return () => {\r\n        node.removeEventListener('mouseenter', handleMouseEnter);\r\n        node.removeEventListener('mouseleave', handleMouseLeave);\r\n      };\r\n    }\r\n  }, [ref.current]);\r\n\r\n  return [ref, isHovered];\r\n}\r\n\r\nexport { useHover };\r\n","import './App.css';\r\n\r\nimport LinksExamples from './LinksExamples';\r\nimport ExampleUseToggle from './useToggle/ExampleUseToggle';\r\nimport ExampleUseTimeout from './useTimeout/ExampleUseTimeout';\r\nimport ExampleUseScrollDirection from './useScrollDirection/ExampleUseScrollDirection';\r\nimport ExampleUseLocalStorage from './useLocalStorage/ExampleUseLocalStorage';\r\nimport ExampleUseAsync from './useAsync/ExampleUseAsync';\r\nimport ExampleUseDebounce from './useDebounce/ExampleUseDebounce';\r\nimport ExampleUseArray from './useArray/ExampleUseArray';\r\nimport ExampleUseOutsideClick from './useOutsideClick/ExampleUseOutsideClick';\r\nimport ExampleUseStateWithHistory from './useStateWithHistory/ExampleUseStateWithHistory';\r\nimport ExampleUseEventListener from './useEventListener/ExampleUseEventListener';\r\nimport ExampleUseOnScreen from './useOnScreen/ExampleUseOnScreen';\r\nimport ExampleUseHover from './useHover/ExampleUseHover';\r\n\r\nconst App = () => (\r\n  <main className=\"wrapper-main\">\r\n    <h1 id=\"main-title\">Cutom Hooks</h1>\r\n    <a\r\n      target=\"_self\"\r\n      title=\"Github markdown doesn't support blank ((\"\r\n      href=\"https://github.com/Dan-Lucian/react-custom-hooks\"\r\n    >\r\n      Go back to github repo\r\n    </a>\r\n\r\n    <LinksExamples />\r\n\r\n    <ExampleUseToggle />\r\n    <ExampleUseTimeout />\r\n    <ExampleUseScrollDirection />\r\n    <ExampleUseLocalStorage />\r\n    <ExampleUseAsync />\r\n    <ExampleUseDebounce />\r\n    <ExampleUseArray />\r\n    <ExampleUseOutsideClick />\r\n    <ExampleUseStateWithHistory />\r\n    <ExampleUseEventListener />\r\n    <ExampleUseOnScreen />\r\n    <ExampleUseHover />\r\n  </main>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}